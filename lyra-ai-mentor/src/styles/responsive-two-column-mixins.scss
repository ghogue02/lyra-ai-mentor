// Responsive Two-Column Layout Mixins and Utilities
// =================================================

// Breakpoint variables
$breakpoint-mobile: 320px;
$breakpoint-mobile-lg: 480px;
$breakpoint-tablet: 768px;
$breakpoint-desktop: 1024px;
$breakpoint-large: 1440px;
$breakpoint-xlarge: 1920px;

// Breakpoint mixins
@mixin mobile {
  @media screen and (min-width: #{$breakpoint-mobile}) {
    @content;
  }
}

@mixin mobile-only {
  @media screen and (max-width: #{$breakpoint-tablet - 1px}) {
    @content;
  }
}

@mixin tablet {
  @media screen and (min-width: #{$breakpoint-tablet}) {
    @content;
  }
}

@mixin tablet-only {
  @media screen and (min-width: #{$breakpoint-tablet}) and (max-width: #{$breakpoint-desktop - 1px}) {
    @content;
  }
}

@mixin desktop {
  @media screen and (min-width: #{$breakpoint-desktop}) {
    @content;
  }
}

@mixin desktop-only {
  @media screen and (min-width: #{$breakpoint-desktop}) and (max-width: #{$breakpoint-large - 1px}) {
    @content;
  }
}

@mixin large-desktop {
  @media screen and (min-width: #{$breakpoint-large}) {
    @content;
  }
}

@mixin xlarge-desktop {
  @media screen and (min-width: #{$breakpoint-xlarge}) {
    @content;
  }
}

// Two-column layout mixin
@mixin two-column-layout($mobile-stack: vertical, $tablet-ratio: 50-50, $desktop-ratio: 45-55) {
  display: flex;
  width: 100%;
  gap: 0;
  
  // Mobile: Stack vertically by default
  @include mobile-only {
    @if $mobile-stack == vertical {
      flex-direction: column;
      
      > * {
        width: 100%;
        flex: 1 1 auto;
        
        &:first-child {
          min-height: 40vh;
          max-height: 50vh;
          border-bottom: 1px solid var(--color-border, #e5e7eb);
        }
        
        &:last-child {
          flex: 1;
          min-height: 50vh;
        }
      }
    } @else if $mobile-stack == horizontal {
      flex-direction: row;
      overflow-x: auto;
      -webkit-overflow-scrolling: touch;
      
      > * {
        flex: 0 0 85%;
        max-width: 85%;
      }
    }
  }
  
  // Tablet: Side by side with configurable ratio
  @include tablet {
    flex-direction: row;
    gap: var(--gap-tablet, 1.5rem);
    
    @if $tablet-ratio == 50-50 {
      > * {
        flex: 1 1 50%;
      }
    } @else if $tablet-ratio == 40-60 {
      > *:first-child { flex: 1 1 40%; }
      > *:last-child { flex: 1 1 60%; }
    } @else if $tablet-ratio == 30-70 {
      > *:first-child { flex: 1 1 30%; }
      > *:last-child { flex: 1 1 70%; }
    }
  }
  
  // Desktop: Enhanced ratios with max-widths
  @include desktop {
    gap: var(--gap-desktop, 2rem);
    
    @if $desktop-ratio == 45-55 {
      > *:first-child { 
        flex: 1 1 45%;
        max-width: 600px;
      }
      > *:last-child { 
        flex: 1 1 55%;
        max-width: 720px;
      }
    } @else if $desktop-ratio == 40-60 {
      > *:first-child { 
        flex: 1 1 40%;
        max-width: 540px;
      }
      > *:last-child { 
        flex: 1 1 60%;
        max-width: 810px;
      }
    } @else if $desktop-ratio == sidebar {
      > *:first-child { 
        flex: 0 0 320px;
        max-width: 320px;
      }
      > *:last-child { 
        flex: 1;
        max-width: none;
      }
    }
  }
}

// Container mixin with responsive padding
@mixin responsive-container {
  width: 100%;
  margin: 0 auto;
  box-sizing: border-box;
  
  // Safe area padding for mobile
  padding-left: env(safe-area-inset-left, 0);
  padding-right: env(safe-area-inset-right, 0);
  
  @include mobile {
    max-width: 100%;
    padding: 0.5rem;
  }
  
  @include tablet {
    max-width: 100%;
    padding: 1rem 1.5rem;
  }
  
  @include desktop {
    max-width: 1280px;
    padding: 1.5rem 2rem;
  }
  
  @include large-desktop {
    max-width: 1440px;
    padding: 2rem 3rem;
  }
  
  @include xlarge-desktop {
    max-width: 1920px;
    padding: 3rem 4rem;
  }
}

// Responsive typography mixin
@mixin responsive-text($mobile-size: 14px, $tablet-size: 15px, $desktop-size: 16px, $large-size: 17px) {
  @include mobile {
    font-size: $mobile-size;
  }
  
  @include tablet {
    font-size: $tablet-size;
  }
  
  @include desktop {
    font-size: $desktop-size;
  }
  
  @include large-desktop {
    font-size: $large-size;
  }
}

// Visibility utilities
@mixin mobile-hide {
  @include mobile-only {
    display: none !important;
  }
}

@mixin tablet-hide {
  @include tablet-only {
    display: none !important;
  }
}

@mixin desktop-hide {
  @include desktop {
    display: none !important;
  }
}

@mixin mobile-show {
  display: none;
  
  @include mobile-only {
    display: block !important;
  }
}

@mixin tablet-show {
  display: none;
  
  @include tablet-only {
    display: block !important;
  }
}

@mixin desktop-show {
  display: none;
  
  @include desktop {
    display: block !important;
  }
}

// Touch-friendly mixin
@mixin touch-friendly {
  @media (hover: none) and (pointer: coarse) {
    min-height: 44px;
    min-width: 44px;
    padding: 0.75rem 1rem;
  }
}

// Utility classes
.two-column {
  @include two-column-layout();
}

.two-column-sidebar {
  @include two-column-layout($desktop-ratio: sidebar);
}

.two-column-40-60 {
  @include two-column-layout($tablet-ratio: 40-60, $desktop-ratio: 40-60);
}

.responsive-container {
  @include responsive-container();
}

.mobile-hide {
  @include mobile-hide();
}

.tablet-hide {
  @include tablet-hide();
}

.desktop-hide {
  @include desktop-hide();
}

.mobile-only {
  @include mobile-show();
}

.tablet-only {
  @include tablet-show();
}

.desktop-only {
  @include desktop-show();
}

// Responsive spacing utilities
@each $size, $value in (xs: 0.25rem, sm: 0.5rem, md: 1rem, lg: 1.5rem, xl: 2rem, 2xl: 3rem) {
  .p-#{$size} {
    @include mobile {
      padding: $value * 0.75;
    }
    @include tablet {
      padding: $value * 0.875;
    }
    @include desktop {
      padding: $value;
    }
  }
  
  .m-#{$size} {
    @include mobile {
      margin: $value * 0.75;
    }
    @include tablet {
      margin: $value * 0.875;
    }
    @include desktop {
      margin: $value;
    }
  }
}

// Grid system for complex layouts
@mixin responsive-grid($mobile-cols: 1, $tablet-cols: 2, $desktop-cols: 3, $gap: 1rem) {
  display: grid;
  gap: $gap;
  
  @include mobile {
    grid-template-columns: repeat($mobile-cols, 1fr);
  }
  
  @include tablet {
    grid-template-columns: repeat($tablet-cols, 1fr);
  }
  
  @include desktop {
    grid-template-columns: repeat($desktop-cols, 1fr);
  }
}

// Aspect ratio mixin for responsive media
@mixin aspect-ratio($width: 16, $height: 9) {
  position: relative;
  
  &::before {
    content: "";
    display: block;
    padding-bottom: percentage($height / $width);
  }
  
  > * {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }
}

// Performance optimization mixin
@mixin optimize-for-performance {
  will-change: transform;
  transform: translateZ(0);
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
}